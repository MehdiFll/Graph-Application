plot(g)
library(igraph)
# your data
mat <- as.matrix(read.table(text=
"node X1 X2 X3 X4 X5 X6
1  0  3  7  4 NA NA
2  3  0  2 NA NA  9
3  7  2  0  1  3  6
4  4 NA  1  0  3 NA
5 NA NA  3  3  0  3
6 NA  9  6 NA  3  0", header=T))
# prepare data for graph functions - set NA to zero to indicate no direct edge
nms <- mat[,1]
mat <- mat[, -1]
colnames(mat) <- rownames(mat) <- nms
mat[is.na(mat)] <- 0
# create graph from adjacency matrix
g <- graph.adjacency(mat, weighted=TRUE)
plot(g)
library(igraph)
mat <- as.matrix(read.table(text=
"node X1 X2 X3 X4 X5 X6
1  0  3  7  4 NA NA
2  3  0  2 NA NA  9
3  7  2  0  1  3  6
4  4 NA  1  0  3 NA
5 NA NA  3  3  0  3
6 NA  9  6 NA  3  0", header=T))
# prepare data for graph functions - set NA to zero to indicate no direct edge
nms <- mat[,1]
mat <- mat[, -1]
colnames(mat) <- rownames(mat) <- nms
mat[is.na(mat)] <- 0
# create graph from adjacency matrix
g <- graph.adjacency(mat, weighted=TRUE)
plot(g)
library(igraph)
mat <- as.matrix(read.table(text=
"node X1 X2 X3 X4 X5 X6
1  0  3  7  4 NA NA
2  3  0  2 NA NA  9
3  7  2  0  1  3  6
4  4 NA  1  0  3 NA
5 NA NA  3  3  0  3
6 NA  9  6 NA  3  0", header=T))
nms <- mat[,1]
mat <- mat[, -1]
colnames(mat) <- rownames(mat) <- nms
mat[is.na(mat)] <- 0
g <- graph.adjacency(mat, weighted=TRUE)
plot(g)
library(igraph)
mat <- as.matrix(read.table(text=
"node X1 X2 X3 X4 X5 X6
1  0  3  7  4 NA NA
2  3  0  2 NA NA  9
3  7  2  0  1  3  6
4  4 NA  1  0  3 NA
5 NA NA  3  3  0  3
6 NA  9  6 NA  3  0", header=T))
nms <- mat[,1]
mat <- mat[, -1]
colnames(mat) <- rownames(mat) <- nms
mat[is.na(mat)] <- 0
g <- graph.adjacency(mat, weighted=TRUE)
plot(g)
library(igraph)
mat <- as.matrix(read.table(text=
"node X1 X2 X3 X4 X5 X6
1  0  3  7  4 NA NA
2  3  0  2 NA NA  9
3  7  2  0  1  3  6
4  4 NA  1  0  3 NA
5 NA NA  3  3  0  3
6 NA  9  6 NA  3  0", header=T))
nms <- mat[,1]
mat <- mat[, -1]
colnames(mat) <- rownames(mat) <- nms
mat[is.na(mat)] <- 0
g <- graph.adjacency(mat, weighted=TRUE)
plot(g)
library(igraph)
mat <- as.matrix(read.table(text=
"node X1 X2 X3 X4 X5 X6
1  0  3  7  4 NA NA
2  3  0  2 NA NA  9
3  7  2  0  1  3  6
4  4 NA  1  0  3 NA
5 NA NA  3  3  0  3
6 NA  9  6 NA  3  0", header=T))
nms <- mat[,1]
mat <- mat[, -1]
colnames(mat) <- rownames(mat) <- nms
mat[is.na(mat)] <- 0
g <- graph.adjacency(mat, weighted=TRUE)
plot(g)
library(igraph)
mat <- as.matrix(read.table(text=
"node X1 X2 X3 X4 X5 X6
1  0  3  7  4 NA NA
2  3  0  2 NA NA  9
3  7  2  0  1  3  6
4  4 NA  1  0  3 NA
5 NA NA  3  3  0  3
6 NA  9  6 NA  3  0", header=T))
nms <- mat[,1]
mat <- mat[, -1]
colnames(mat) <- rownames(mat) <- nms
mat[is.na(mat)] <- 0
g <- graph.adjacency(mat, weighted=TRUE)
png(filename="stemp.png", width=500, height=500);
plot(g)
library(igraph)
mat <- as.matrix(read.table(text=
"node X1 X2 X3 X4 X5 X6
1  0  3  7  4 NA NA
2  3  0  2 NA NA  9
3  7  2  0  1  3  6
4  4 NA  1  0  3 NA
5 NA NA  3  3  0  3
6 NA  9  6 NA  3  0", header=T))
nms <- mat[,1]
mat <- mat[, -1]
colnames(mat) <- rownames(mat) <- nms
mat[is.na(mat)] <- 0
g <- graph.adjacency(mat, weighted=TRUE)
plot(g)
library(igraph)
mat <- as.matrix(read.table(text=
"node X1 X2 X3 X4 X5 X6
1  0  3  7  4 NA NA
2  3  0  2 NA NA  9
3  7  2  0  1  3  6
4  4 NA  1  0  3 NA
5 NA NA  3  3  0  3
6 NA  9  6 NA  3  0", header=T))
nms <- mat[,1]
mat <- mat[, -1]
colnames(mat) <- rownames(mat) <- nms
mat[is.na(mat)] <- 0
g <- graph.adjacency(mat, weighted=TRUE)
plot(g)
library(igraph)
mat <- as.matrix(read.table(text=
"node X1 X2 X3 X4 X5 X6
1  0  3  7  4 NA NA
2  3  0  2 NA NA  9
3  7  2  0  1  3  6
4  4 NA  1  0  3 NA
5 NA NA  3  3  0  3
6 NA  9  6 NA  3  0", header=T))
nms <- mat[,1]
mat <- mat[, -1]
colnames(mat) <- rownames(mat) <- nms
mat[is.na(mat)] <- 0
g <- graph.adjacency(mat, weighted=TRUE)
plot(g)
png(filename="temp.png", width=500, height=500);
plot(g)
plot(g)
library(igraph)
plot(g)
View(mat)
View(mat)
library(igraph);
mat <- as.matrix(read.csv("C:\\wamp64\\www\\R\\matrix.csv",header=FALSE));
nms <- mat[,1];
mat <- mat[, -1];
colnames(mat) <- rownames(mat) <- nms;
mat[is.na(mat)] <- 0;
g <- graph.adjacency(mat, weighted=TRUE);
png(filename="temp.png", width=500, height=500);
plot(g);
dev.off()
library(igraph);
mat <- as.matrix(read.csv("C:\\wamp64\\www\\R\\matrix.csv",header=FALSE));
nms <- mat[,1];
mat <- mat[, -1];
colnames(mat) <- rownames(mat) <- nms;
mat[is.na(mat)] <- 0;
g <- graph.adjacency(mat, weighted=TRUE);
png(filename="temp.png", width=500, height=500);
plot(g);
dev.off()
history
View(mat)
View(g)
View(mat)
View(mat)
temp = read.csv("C:\\wamp64\\www\\R\\matrix.csv",header=FALSE)
View(temp)
View(temp)
temp = read.csv("C:\\wamp64\\www\\R\\matrix.csv",header=FALSE,sep = ";")
View(temp)
View(temp)
library(igraph);
mat <- as.matrix(read.csv("C:\\wamp64\\www\\R\\matrix.csv",header=FALSE,sep = ";"));
nms <- mat[,1];
mat <- mat[, -1];
colnames(mat) <- rownames(mat) <- nms;
mat[is.na(mat)] <- 0;
g <- graph.adjacency(mat, weighted=TRUE);
png(filename="temp.png", width=500, height=500);
plot(g);
dev.off()
setwd("C:/wamp64/www/R")
library(igraph);
mat <- as.matrix(read.csv("C:\\wamp64\\www\\R\\matrix.csv",header=FALSE,sep = ";"));
nms <- mat[,1];
mat <- mat[, -1];
colnames(mat) <- rownames(mat) <- nms;
mat[is.na(mat)] <- 0;
g <- graph.adjacency(mat, weighted=TRUE);
png(filename="temp.png", width=500, height=500);
plot(g);
dev.off()
View(temp)
View(temp)
library(igraph);
mat <- as.matrix(read.csv("C:\\wamp64\\www\\R\\matrix.csv",header=FALSE,sep = ";"));
g <- graph.adjacency(mat, weighted=TRUE);
png(filename="temp.png", width=500, height=500);
plot(g);
dev.off()
View(g)
library(igraph);
mat <- as.matrix(read.csv("C:\\wamp64\\www\\R\\matrix.csv",header=FALSE,sep = ";"));
g <- graph.adjacency(mat, weighted=TRUE);
png(filename="temp.png", width=500, height=500);
plot(g);
dev.off()
library(igraph);
mat <- as.matrix(read.csv("C:\\wamp64\\www\\R\\matrix.csv",header=FALSE,sep = ";"));
g <- graph.adjacency(mat, weighted=TRUE);
png(filename="temp.png", width=500, height=500);
plot(g);
dev.off()
library(igraph);
mat <- as.matrix(read.csv("C:\\wamp64\\www\\R\\matrix.csv",header=FALSE,sep = ";"));
g <- graph.adjacency(mat, weighted=TRUE);
png(filename="temp.png", width=500, height=500);
plot(g);
dev.off()
load("C:/wamp64/www/R/.RData")
setwd("C:/wamp64/www/R")
plot(g);
# script2.R
library(igraph);
mat <- as.matrix(read.csv("C:\\wamp64\\www\\R\\matrix.csv",header=FALSE,sep = ";"));
png(filename="temp.png", width=500, height=500);
g <- graph.adjacency(mat, weighted=TRUE);
plot(g)
# script2.R
library(igraph);
mat <- as.matrix(read.csv("C:\\wamp64\\www\\R\\matrix.csv",header=FALSE,sep = ";"));
g <- graph.adjacency(mat, weighted=TRUE);
png(filename="temp.png", width=500, height=500);
plot(g)
# script2.R
library(igraph);
mat <- as.matrix(read.csv("C:\\wamp64\\www\\R\\matrix.csv",header=FALSE,sep = ";"));
g <- graph.adjacency(mat, weighted=TRUE);
png(filename="temp.png", width=500, height=500);
plot(g)
# script2.R
library(igraph);
mat <- as.matrix(read.csv("C:\\wamp64\\www\\R\\matrix.csv",header=FALSE,sep = ";"));
g <- graph.adjacency(mat, weighted=TRUE);
png(filename="temp.png", width=500, height=500);
plot(g)
dev.flush();
dev.off()
# script2.R
library(igraph);
mat <- as.matrix(read.csv("C:\\wamp64\\www\\R\\matrix.csv",header=FALSE,sep = ";"));
g <- graph.adjacency(mat, weighted=TRUE);
png(filename="temp.png", width=500, height=500);
plot(g)
# script2.R
library(igraph);
mat <- as.matrix(read.csv("C:\\wamp64\\www\\R\\matrix.csv",header=FALSE,sep = ";"));
g <- graph.adjacency(mat, weighted=TRUE);
png(filename="temp.png", width=500, height=500);
plot(g)
# script2.R
library(igraph);
mat <- as.matrix(read.csv("C:\\wamp64\\www\\R\\matrix.csv",header=FALSE,sep = ";"));
g <- graph.adjacency(mat, weighted=TRUE);
png(filename="temp.png", width=500, height=500);
plot(g);
dev.off()
# script2.R
library(igraph);
mat <- as.matrix(read.csv("C:\\wamp64\\www\\R\\matrix.csv",header=FALSE,sep = ";"));
g <- graph.adjacency(mat, weighted=TRUE);
png(filename="temp.png", width=500, height=500);
plot(g);
dev.off()
View(g)
exec('C:\\"Program Files"\\R\R-3.5.0\bin\Rscript.exe C:\wamp64\www\R\monscript.R')
'C:\\"Program Files"\\R\R-3.5.0\bin\Rscript.exe C:\wamp64\www\R\monscript.R'
'C:\\"Program Files"\\R\R-3.5.0\bin\Rscript.exe C:\wamp64\www\R\monscript.R
C:\\"Program Files"\\R\R-3.5.0\bin\Rscript.exe C:\wamp64\www\R\monscript.R
C:\\"Program Files"\\R\\R-3.5.0\\bin\\Rscript.exe C:\\wamp64\\www\\R\\monscript.R
install.packages("qgraph",dep=TRUE)
View(mat)
View(mat)
View(g)
dev.off()
library(igraph);
mat <- as.matrix(read.csv("C:\\wamp64\\www\\R\\matrix.csv",header=FALSE,sep = ";"));
g <- graph.adjacency(mat, weighted=TRUE);
png(filename="temp.png", width=500, height=500);
plot(g);
dev.off()
library(igraph);
mat <- as.matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")));
g <- graph.adjacency(mat, weighted=TRUE);
png(filename="temp.png", width=500, height=500);
plot(g);
dev.off()
library(igraph);
mat <- as.matrix(c(1,2,3, 11,12,13), nrow = 3, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")));
g <- graph.adjacency(mat, weighted=TRUE);
png(filename="temp.png", width=500, height=500);
plot(g);
dev.off()
library(igraph);
mat <- as.matrix(c(1,2,3, 11,12,13), nrow = 3, ncol = 3, byrow = TRUE);
g <- graph.adjacency(mat, weighted=TRUE);
png(filename="temp.png", width=500, height=500);
plot(g);
dev.off()
library(igraph);
mat <- as.matrix(c(1,2,3, 11,12,13));
g <- graph.adjacency(mat, weighted=TRUE);
png(filename="temp.png", width=500, height=500);
plot(g);
dev.off()
library(igraph);
mat <- as.matrix(c(0,0,0, 0,0,0));
g <- graph.adjacency(mat, weighted=TRUE);
png(filename="temp.png", width=500, height=500);
plot(g);
dev.off()
library(igraph);
mat <- as.matrix();
g <- graph.adjacency(mat, weighted=TRUE);
png(filename="temp.png", width=500, height=500);
plot(g);
dev.off()
View(g)
View(g)
library("igraph", lib.loc="~/R/win-library/3.5")
installed.packages()
library(lib.loc = .Library) # list all packages in the default library
library(lib.loc = .Library) # list all packages in the default library
library(mypkg, pos = "package:base")
library(igraph, pos = "package:base")
library(igraph, pos = "package:base")
install.packages("igraph");
install.packages("igraph")
remove.packages("igraph", lib="C:/Program Files/R/R-3.5.0/library")
remove.packages("igraph", lib="C:/Program Files/R/R-3.5.0/library")
library("igraph", lib.loc="C:/Program Files/R/R-3.5.0/library")
remove.packages("igraph", lib="C:/Program Files/R/R-3.5.0/library")
install.packages(pkgconfig)
install.packages("pkgconfig")
install.packages("pkgconfig")
get.edgelist(g)
library(igraph)
get.edgelist(g)
View(g)
distances(g,mode = c("all", algorithm = c("automatic", "unweighted",
"dijkstra", "bellman-ford", "johnson"))
zdd*
distances(g,mode = c("all"), algorithm = c("automatic", "unweighted",
"dijkstra", "bellman-ford", "johnson"))
distances(g,mode = c("all"), algorithm = c("dijkstra"))
install.packages(erer)
View(g)
View(g)
View(g)
N <- as.matrix(read.csv("matrix.csv",sep=";",header = FALSE),directed=TRUE);
g <- graph.adjacency(N, mode = "directed",weighted=TRUE);
bfs(g, "V1", neimode = c("total"),
unreachable = FALSE,  order = TRUE, rank = FALSE,
father = FALSE, pred = FALSE, succ = FALSE, dist = FALSE,
callback = NULL, extra = NULL, rho = parent.frame())
library("igraph");
N <- as.matrix(read.csv("matrix.csv",sep=";",header = FALSE),directed=TRUE);
g <- graph.adjacency(N, mode = "directed",weighted=TRUE);
bfs(g, "V1", neimode = c("total"),
unreachable = FALSE,  order = TRUE, rank = FALSE,
father = FALSE, pred = FALSE, succ = FALSE, dist = FALSE,
callback = NULL, extra = NULL, rho = parent.frame())
library("igraph");
#args <- commandArgs(TRUE);
#argument <- args[1];
N <- as.matrix(read.csv("matrix.csv",sep=";",header = FALSE),directed=TRUE);
g <- graph.adjacency(N, mode = "directed",weighted=TRUE);
res<-dfs(g, "V1", neimode = c("total"),
unreachable = FALSE,  order = TRUE,
callback = NULL, extra = NULL, rho = parent.frame())
sink("dfs.txt");
print(res);
sink()
library("igraph");
#args <- commandArgs(TRUE);
#argument <- args[1];
N <- as.matrix(read.csv("matrix.csv",sep=";",header = FALSE),directed=TRUE);
g <- graph.adjacency(N, mode = "directed",weighted=TRUE);
res<-dfs(g, "V1", neimode = c("total"),
unreachable = FALSE,  order = TRUE,
extra = NULL, rho = parent.frame())
sink("dfs.txt");
print(res);
sink()
library("igraph");
args <- commandArgs(TRUE);
argument <- args[1];
N <- as.matrix(read.csv("matrix.csv",sep=";",header = FALSE),directed=TRUE);
g <- graph.adjacency(N, mode = "directed",weighted=TRUE);
s.paths <- shortest.paths(g,1);
solid.epaths = get.shortest.paths(g, from = argument, to = V(g),output = 'epath');
sink("shortestpath.txt");
print(s.paths);
print(solid.epaths);
sink()
library("igraph");
args <- commandArgs(TRUE);
argument <- args[1];
argument1 <- args[2];
N <- as.matrix(read.csv("matrix.csv",sep=";",header = FALSE),directed=TRUE);
g <- graph.adjacency(N, mode = "directed",weighted=TRUE);
res<-max_flow(g, argument, argument1,capacity = NULL);
sink("max_flow.txt");
print(res);
sink()
View(mat)
View(mat)
View(mat)
View(g)
View(g)
help=sna
library(help=sna).
library(help=sna)
library(help="igraph")
library(igraph);
N <- as.matrix(read.csv("matrix.csv",sep=";",header = FALSE),directed=TRUE);
g <- graph.adjacency(N, mode = "directed",weighted=TRUE);
png(filename="temp.png", width=900, height=900);
plot(g,vertex.color="green");
dev.off()
library(igraph);
N <- as.matrix(read.csv("matrix.csv",sep=";",header = FALSE),directed=TRUE);
g <- graph.adjacency(N, mode = "directed",weighted=TRUE);
png(filename="temp.png", width=800, height=800);
plot(g,vertex.color="blue");
dev.off()
library(igraph);
N <- as.matrix(read.csv("matrix.csv",sep=";",header = FALSE),directed=TRUE);
g <- graph.adjacency(N, mode = "directed",weighted=TRUE);
png(filename="temp.png", width=800, height=800);
plot(g,vertex.color="lightblue");
dev.off()
library("igraph");
args <- commandArgs(TRUE);
argument <- as.integer(args[1]);
argument1 <- as.integer(args[2]);
N <- as.matrix(read.csv("matrix.csv",sep=";",header = FALSE),directed=TRUE);
g <- graph.adjacency(N, mode = "directed",weighted=TRUE);
a <-sna::maxflow(N, argument, argument1, ignore.eval = FALSE)
sink("max_flow.txt");
print(a);
sink()
library("igraph");
library("sna");
args <- commandArgs(TRUE);
argument <- as.integer(args[1]);
argument1 <- as.integer(args[2]);
N <- as.matrix(read.csv("matrix.csv",sep=";",header = FALSE),directed=TRUE);
g <- graph.adjacency(N, mode = "directed",weighted=TRUE);
a <-sna::maxflow(N, argument, argument1, ignore.eval = FALSE)
sink("max_flow.txt");
print(a);
sink()
library("igraph");
install.packages("sna");
args <- commandArgs(TRUE);
argument <- as.integer(args[1]);
argument1 <- as.integer(args[2]);
N <- as.matrix(read.csv("matrix.csv",sep=";",header = FALSE),directed=TRUE);
g <- graph.adjacency(N, mode = "directed",weighted=TRUE);
a <-sna::maxflow(N, argument, argument1, ignore.eval = FALSE)
sink("max_flow.txt");
print(a);
sink()
library("igraph");
args <- commandArgs(TRUE);
argument <- as.integer(args[1]);
argument1 <- as.integer(args[2]);
N <- as.matrix(read.csv("matrix.csv",sep=";",header = FALSE),directed=TRUE);
g <- graph.adjacency(N, mode = "directed",weighted=TRUE);
a <-sna::maxflow(N, argument, argument1, ignore.eval = FALSE)
sink("max_flow.txt");
print(a);
sink()
